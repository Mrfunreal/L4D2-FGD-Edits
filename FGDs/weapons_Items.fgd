//map parameter sprites
@PointClass base(Targetname,Angles) iconsprite("editor/new/info_map_parameters.vmt")= info_map_parameters :
	"L4D-specific map parameters."
[
	AmmoDensity(float) : "Ammo pile density" : "6.48" : "Ammo pile density per sq 100 yards"
	PainPillDensity(float) : "Pain Pill density" : "6.48" : "Pain Pill density per sq 100 yards"
	MolotovDensity(float) : "Molotov density" : "6.48" : "Molotov density per sq 100 yards"
	PipeBombDensity(float) : "Pipe Bomb density" : "6.48" : "Pipe Bomb density per sq 100 yards"
	PistolDensity(float) : "Pistol density" : "6.48" : "Pistol density per sq 100 yards"
	GasCanDensity(float) : "Gas Can density" : "6.48" : "Gas Can density per sq 100 yards"
	OxygenTankDensity(float) : "Oxygen Tank density" : "6.48" : "Oxygen Tank density per sq 100 yards"
	PropaneTankDensity(float) : "Propane Tank density" : "6.48" : "Propane Tank density per sq 100 yards"
	MeleeWeaponDensity(float) : "Melee Weapon density" : "6.48" : "Melee Weapon density per sq 100 yards"
	AdrenalineDensity(float) : "Adrenaline density" : "6.48" : "Adrenaline density per sq 100 yards"
	DefibrillatorDensity(float) : "Defibrillator density" : "3.0" : "Defibrillator density per sq 100 yards"
	VomitJarDensity(float) : "Boomer Bile density" : "6.48" : "Boomer Bile density per sq 100 yards"
	UpgradepackDensity(float) : "Ammo upgrade density" : "1.0" : "Ammo upgrade pack density per sq 100 yards"
	ChainsawDensity(float) : "Super Weapon density" : "1.0" : "Chainsaw and Grenade Launcher density per sq 100 yards"
	ConfigurableWeaponDensity(float) : "Configurable Weapon Spawn density" : "-1.0" : "Density for weapon_spawn entities, -1 to spawn all"
	ConfigurableWeaponClusterRange(float) : "Configurable Weapon Cluster Range" : 100 : "weapon_spawn entities that are this close to each other are considered a single 'cluster' for population purposes"
	MagnumDensity(float) : "Magnum Pistol Spawn density" : "-1.0" : "Density for weapon_magnum_spawn entities, -1 to spawn all"

	ItemClusterRange(float) : "Item Cluster Range" : 50 : "Scavenge items of the same kind that are this close to each other are considered a single 'cluster' for population purposes"	
	FinaleItemClusterCount(integer) : "Finale Item Cluster Count" : 3 : "How many clusters of items will be populated in the finale"
	
	input UpdateCvars(void) : "Stuff values from this entity into cvars for tweaking"
]
@PointClass base(Targetname,Angles) iconsprite("editor/new/info_map_parameters_versus.vmt")= info_map_parameters_versus :
	"L4D-specific map parameters for versus games."
[
	AmmoDensity(float) : "Ammo pile density" : "6.48" : "Ammo pile density per sq 100 yards"
	PainPillDensity(float) : "Pain Pill density" : "6.48" : "Pain Pill density per sq 100 yards"
	MolotovDensity(float) : "Molotov density" : "6.48" : "Molotov density per sq 100 yards"
	PipeBombDensity(float) : "Pipe Bomb density" : "6.48" : "Pipe Bomb density per sq 100 yards"
	PistolDensity(float) : "Pistol density" : "6.48" : "Pistol density per sq 100 yards"
	GasCanDensity(float) : "Gas Can density" : "6.48" : "Gas Can density per sq 100 yards"
	OxygenTankDensity(float) : "Oxygen Tank density" : "6.48" : "Oxygen Tank density per sq 100 yards"
	PropaneTankDensity(float) : "Propane Tank density" : "6.48" : "Propane Tank density per sq 100 yards"
	MeleeWeaponDensity(float) : "Melee Weapon density" : "6.48" : "Melee Weapon density per sq 100 yards"
	AdrenalineDensity(float) : "Adrenaline density" : "6.48" : "Adrenaline density per sq 100 yards"
	DefibrillatorDensity(float) : "Defibrillator density" : "2.50" : "Defibrillator density per sq 100 yards"
	VomitJarDensity(float) : "Boomer Bile density" : "6.48" : "Boomer Bile density per sq 100 yards"
	UpgradepackDensity(float) : "Ammo upgrade density" : "1.0" : "Ammo upgrade pack density per sq 100 yards"
	ChainsawDensity(float) : "Super Weapon density" : "1.0" : "Chainsaw and Grenade Launcher density per sq 100 yards"
	ConfigurableWeaponDensity(float) : "Configurable Weapon Spawn density" : "-1.0" : "Density for weapon_spawn entities, -1 to spawn all"
	ConfigurableWeaponClusterRange(float) : "Configurable Weapon Cluster Range" : 100 : "weapon_spawn entities that are this close to each other are considered a single 'cluster' for population purposes"
	MagnumDensity(float) : "Magnum Pistol Spawn density" : "-1.0" : "Density for weapon_spawn entities, -1 to spawn all"

	ItemClusterRange(float) : "Item Cluster Range" : 50 : "Scavenge items of the same kind that are this close to each other are considered a single 'cluster' for population purposes"
	FinaleItemClusterCount(integer) : "Finale Item Cluster Count" : 3 : "How many clusters of items will be populated in the finale"
	
	input UpdateCvars(void) : "Stuff values from this entity into cvars for tweaking"
]

//weapon_spawn_single with better listing of keyvalues. such as distinguishing skin and weaponskin.
@BaseClass color(0 255 0) base(Parentname, Global, Targetname, Angles, Studiomodel) = WeaponSpawnSingle
[
	disableshadows(choices) : "Disable Shadows" : 1 : "Used to disable dynamic shadows on this entity. Disabled by default, because often times shadows of gun on tables are found on the floor. Which looks weird" =
	[
		0 : "No"
		1 : "Yes"
	]
	skin(integer) 		: "Skin               (Worldmodel)" : 0 : "Some weapons have multiple versions of their textures, called skins. Set this to a number other than -1 to make the given weapon use that skin instead of the default."
	weaponskin(integer) : "Weapon Skin (Viewmodel)" : -1 : "Some weapons have multiple versions of their textures, called skins. Set this to a number other than -1 to make the given weapon use that skin instead of the default."
	glowrange(float) : "Glow Range" : 0 : "Set a custom glow range for this spawner. 0 means use the default range."

	solid(choices) : "Collisions" : 6 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]

	spawnflags(Flags) =
	[
		1 : "Enable Physics" : 0
		2 : "Must Exist" : 0
		8 : "Infinite items (overrides count)" : 0
	]
]

//CARRIABLES 
 @BaseClass color(200 200 0) base(Targetname, Angles, Weapon)  = WeaponSpawnCarry
[
	skin(integer) 		: "Skin               (Worldmodel)" : 0 : "Some weapons have multiple versions of their textures, called skins. Set this to a number other than -1 to make the given weapon use that skin instead of the default."
	weaponskin(integer) : "Weapon Skin (Viewmodel)" : -1 : "Some weapons have multiple versions of their textures, called skins. Set this to a number other than -1 to make the given weapon use that skin instead of the default."
	vscripts(scriptlist) : "Entity Scripts" : "" : "Name(s) of script files that are executed after all entities have spawned."
	thinkfunction(string) : "Script think function" : "" : "Name of a function in this entity's script scope which will be called automatically."

	solid(choices) : "Collisions" : 6 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]

	// Inputs
	input Wake(void) : "Wake up this physics object, if it is sleeping."
	input Sleep(void) : "Put this physics object to sleep. It will wake if given the Wake input, or if force is applied to it. Note that physics objects go to sleep automatically after coming to rest for a while, so you don't really need to use this."
	input EnableMotion(void) : "Enable physics motion/collision response."
	input DisableMotion(void) : "Disable physics motion/collision response."
	input DisableFloating(void) : "Disable fluid/floating simulation to reduce cost."
	input SetBodyGroup(integer) : "Set this prop's body group (from 0 - n)."
	input physdamagescale(float) : "Set the Physics Impact Damage Scale for this character. NOTE: 0 means this feature is disabled for backwards compatibility."
	input EnableDamageForces(void) : "Damaging the entity applies physics forces to it."
	input DisableDamageForces(void) : "Damaging the entity does *not* apply physics forces to it."
	input EnablePuntSound(void) : "Allow this prop to play its own sound when punted"
	input DisablePuntSound(void) : "Prevent this prop from playing its own sound when punted"
	input Ignite(void) : "Ignite, burst into flames."
	input IgniteLifetime(float) : "Ignite, with a parameter lifetime."
	input IgniteNumHitboxFires(integer) : "Ignite, with a parameternumber of hitbox fires."
	input IgniteHitboxFireScale(float) : "Ignite, with a parameter hitbox fire scale."
	
	// Outputs
	output OnMotionEnabled(void) : "Fired when motion is enabled on this prop, either via 'Health Level to Override Motion' or from the EnableMotion input."
	output OnAwakened(void) : "Fired when this entity becomes awake (collision/force is applied to it while it's asleep)."
	output OnPhysGunDrop(void) : "Fired when the player drops the prop with +USE."
	output OnPlayerUse(void) : "Fired when the player tries to +USE the prop. This output will fire only if the Generate output on +USE spawnflag is set."
	output OnPlayerPickup(void) : "Fired whenever the player picks up this prop with +USE."
	output OnOutOfWorld(void) : "Fired whenever the prop is out of the allowed world bounds."
	output OnHitByTank(void) : "Fired whenever the prop is hit by a tank (L4D)."
	
		spawnflags(flags) = 
	[
		1 : "Start Asleep (Constrain to spawn position, until woken by touch)" : 0
		8 : "Motion Disabled (Constrain to spawn position, until picked up and thrown)" : 0
		256 : "Generate output on +USE " : 1
		512 : "Prevent pickup" : 0
		8192: "Force server-side (Multiplayer only)" : 0
	]
]

@PointClass color(0 200 0)base(WeaponSpawnCarry) studioprop("models/props_junk/gascan001a.mdl") 	= weapon_gascan : "Gas Can" []
@PointClass color(0 200 0)base(WeaponSpawnCarry) studioprop("models/props_junk/gnome.mdl") 			= weapon_gnome : "Gnome" []
@PointClass color(0 200 0)base(WeaponSpawnCarry) studioprop("models/w_models/weapons/w_cola.mdl") 	= weapon_cola_bottles : "Cola" []


//Weapon_Spawn with helper model picker
@PointClass color(255 255 0) base(Parentname, Global, Targetname, Angles) studioprop() = weapon_spawn : "Configurable Weapon Spawner"
[	
	weapon_selection(choices) : "Selection" : "any_primary" : "Spawn the selected weapon or weapon category" =
	[
		"any" : "Any primary or secondary weapon"		

		"any_pistol" : "Any Pistol"
		"weapon_pistol" : "Pistol"
		"weapon_pistol_magnum" : "Magnum Pistol"
		
		"any_primary" : "Any Primary Weapon"
		
		"tier1_any"	: "Any tier 1 primary"
		"tier2_any"	: "Any tier 2 primary"
		
		"any_smg" : "Any tier 1 SMG"
		"any_rifle" : "Any tier 2 Rifle"
		"any_sniper_rifle" : "Any tier 2 Sniper Rifle"
		
		"any_shotgun" : "Any Shotgun"
		"tier1_shotgun" : "Any tier 1 Shotgun"
		"tier2_shotgun" : "Any tier 2 Shotgun"
		
		// specific primary weapons	
		"weapon_smg" : "SMG"
		"weapon_smg_silenced" : "Silenced SMG"
		"weapon_pumpshotgun" : "Pump Shotgun"
		"weapon_shotgun_chrome" : "Chrome Shotgun"
		"weapon_autoshotgun" : "Auto Shotgun"
		"weapon_shotgun_spas" : "SPAS Shotgun"
		"weapon_rifle" : "M4 Rifle"
		"weapon_rifle_desert" : "Desert Rifle"
		"weapon_rifle_ak47" : "AK47"
		"weapon_hunting_rifle" : "Hunting Rifle"
		"weapon_sniper_military" : "Sniper Military"
		"weapon_smg_mp5" : "MP5"
		"weapon_rifle_sg552" : "SG552"
		"weapon_sniper_awp" : "Sniper AWP"
		"weapon_sniper_scout" : "Sniper Scout"
	]	
	model(choices) : "Helper Model" : "models/editor/gun_helper.mdl" : "Visual aid. Does not determine what spawns here." =
  	[
  	"models/editor/gun_helper.mdl" 							: "Generic Helper" 
  	"models/w_models/Weapons/w_pistol_a.mdl" 				: "Pistol A" 
  	"models/w_models/Weapons/w_pistol_b.mdl" 				: "Pistol B" 
  	"models/w_models/Weapons/w_desert_eagle.mdl" 			: "Magnum Pistol"   	
  	"models/w_models/Weapons/w_smg_uzi.mdl" 				: "Uzi" 
  	"models/w_models/Weapons/w_smg_a.mdl" 					: "Mac12" 
  	"models/w_models/Weapons/w_smg_mp5.mdl" 				: "MP5"  
  	"models/w_models/Weapons/w_shotgun.mdl" 				: "Pump Shotgun" 
  	"models/w_models/Weapons/w_pumpshotgun_A.mdl" 			: "Chrome Shotgun" 
  	"models/w_models/Weapons/w_autoshot_m4super.mdl" 		: "Auto Shotgun" 	
  	"models/w_models/Weapons/w_shotgun_spas.mdl" 			: "SPAS Shotgun"   	
  	"models/w_models/Weapons/w_rifle_B.mdl" 				: "Desert Rifle" 
  	"models/w_models/Weapons/w_rifle_ak47.mdl" 				: "AK47" 
  	"models/w_models/Weapons/w_rifle_m16a2.mdl" 			: "M16 Rifle" 	
  	"models/w_models/Weapons/w_rifle_sg552.mdl" 			: "SG552"  	
  	"models/w_models/Weapons/w_sniper_awp.mdl" 				: "AWP Sniper" 
  	"models/w_models/Weapons/w_sniper_scout.mdl" 			: "Scout Sniper" 
  	"models/w_models/Weapons/w_sniper_military.mdl" 		: "Military Sniper Rifle" 
  	"models/w_models/Weapons/w_sniper_mini14.mdl" 			: "Hunting Rifle" 
  	]
	
	spawn_without_director(choices) : "Spawn immediately without director" : 0 : "Bypass the proximity checks that make nearby weapons be the same tier / not the same weapon" =
	[
		0 : "No"
		1 : "Yes"
	]	

	spawnflags(Flags) = 
	[
		1 : "Enable Physics" : 0
		2 : "Must Exist" : 0
		4 : "Absorb any dropped weapon type (will NOT drop previously held weapon to the ground when set to 1)" : 0
		8 : "Infinite items (overrides count)" : 0
		16 : "Constrain to spawn position (don't drop to the ground)" : 0
	]

	no_cs_weapons(choices) : "No CS Weapons" : 0 : "When selecting 'any' weapon, set this to true if you do not want CS weapons." =
	[
		0 : "No"
		1 : "Yes"
	]		
	count(integer) : "Count" : 5 : "Max number of weapons given before disappearing."

	skin(integer) 		: "Skin               (Worldmodel)" : 0 : "Some weapons have multiple versions of their textures, called skins. Set this to a number other than -1 to make the given weapon use that skin instead of the default."
	weaponskin(integer) : "Weapon Skin (Viewmodel)" : -1 : "Some weapons have multiple versions of their textures, called skins. Set this to a number other than -1 to make the given weapon use that skin instead of the default."
	glowrange(float) : "Glow Range" : 0 : "Set a custom glow range for this spawner. 0 means use the default range."

	solid(choices) : "Collisions" : 6 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]
	disableshadows(choices) : "Disable Shadows" : 1 : "Used to disable dynamic shadows on this entity. Disabled by default, because often times shadows of gun on tables are found on the floor. Which looks weird" =
	[
		0 : "No"
		1 : "Yes"
	]
]
//weapon_ammo_spawn with model. Removed obsolete keyvalues added by "weaponspawn" base.
@PointClass color(0 255 0) base(Parentname, Global, Targetname, Angles, Studiomodel) studioprop() = weapon_ammo_spawn : "Ammo Spawn Location" 
[
	disableshadows(choices) : "Disable Shadows" : 1 : "Used to disable dynamic shadows on this entity. Disabled by default, because often times shadows of gun on tables are found on the floor. Which looks weird" =
	[
		0 : "No"
		1 : "Yes"
	]
	model(studio) 	: "Model" : "models/props/terror/ammo_stack.mdl" : "Models usually used:\n models/props/terror/ammo_stack.mdl \n models/props_unique/spawn_apartment/coffeeammo.mdl" 
	skin(integer)	: "Skin " : 0 : "Some weapons have multiple versions of their textures, called skins. Set this to a number other than -1 to make the given weapon use that skin instead of the default."
	glowrange(float) : "Glow Range" : 0 : "Set a custom glow range for this spawner. 0 means use the default range."
	spawnflags(Flags) =
	[
		1 : "Enable Physics" : 0
		2 : "Must Exist" : 0
	]

]
//Useful Melee Spawner
//Had to remove all bases and manually add keyvalues required because of the model choice browser.
@PointClass color(0 255 0) base(Parentname, Global, Targetname, Angles) studioprop() = weapon_melee_spawn : "Melee Weapon"
[

	melee_weapon(string) : "Melee Weapon" : "any" : "Options: 'Any' or a comma-delimited string of melee weapon script names. Leave blank for none.                                                            Valid names are: Golfclub, Fireaxe, Frying_pan, Machete, Baseball_bat, Crowbar, Cricket_bat, Tonfa, Katana, Electric_guitar, Knife, Pitchfork, Shovel - Or the  weapon script name of a custom melee weapon."
	count(integer) : "Count" : 5 : "Max number of weapons given before disappearing."
//	model(studio) : "Helper Model" : "models/weapons/melee/w_crowbar.mdl" : "ONLY for visual aid. Actual model in game is set by the 'Melee Weapon' String"
	model(choices) : "Helper Model" : "models/weapons/melee/w_crowbar.mdl" : "Visual aid. Does not determine what spawns here." =
  	[
	"models/weapons/melee/w_bat.mdl"				: "Baseball Bat"
	"models/weapons/melee/w_cricket_bat.mdl"		: "Cricket Bat"
	"models/weapons/melee/w_crowbar.mdl"			: "Crowbar"
	"models/weapons/melee/w_electric_guitar.mdl"	: "Electric Guitar"
	"models/weapons/melee/w_fireaxe.mdl"			: "Fireaxe"
	"models/weapons/melee/w_frying_pan.mdl"			: "Frying Pan"
	"models/weapons/melee/w_golfclub.mdl"			: "Golfclub"
	"models/weapons/melee/w_katana.mdl"				: "Katana"
	"models/w_models/weapons/w_knife_t.mdl"			: "Knife"
	"models/weapons/melee/w_machete.mdl"			: "Machete"
	"models/weapons/melee/w_pitchfork.mdl"			: "Pitchfork"
	"models/weapons/melee/w_shovel.mdl"				: "Shovel"
	"models/weapons/melee/w_tonfa.mdl"				: "Tonfa"
	"models/weapons/melee/w_riotshield.mdl"			: "Riotshield (Needs Mod To Enable Ingame)"
	]
	HMB(studio) : "Helper Model Browser" : "Browse for custom models" : "Browse for a custom melee model, so you can copypaste the path into 'Helper Model' to use it as visual aid."

	//Studiomodel things because the model choice picker doesn't work if a base used has a "model" keyvalue already.
	skin(integer) 		: "Skin               (Worldmodel)" : 0 : "Some weapons have multiple versions of their textures, called skins. Set this to a number other than -1 to make the given weapon use that skin instead of the default."
	weaponskin(integer) : "Weapon Skin (Viewmodel)" : -1 : "Some weapons have multiple versions of their textures, called skins. Set this to a number other than -1 to make the given weapon use that skin instead of the default."
	body(integer) : "Body" : 0 : "Some models have multiple bodygroups. Set this to a number other than 0 to use that bodygroup instead of the default."
	glowrange(float) : "Glow Range" : 0 : "Set a custom glow range for this spawner. 0 means use the default range."

	disableshadows(choices) : "Disable Shadows" : 1 : "Used to disable dynamic shadows on this entity. Disabled by default, because often times shadows of gun on tables are found on the floor. Which looks weird" =
	[
		0 : "No"
		1 : "Yes"
	]
	solid(choices) : "Collisions" : 6 =
	[
		0: "Not Solid"
		2: "Use Bounding Box"
		6: "Use VPhysics"
	]
	// Inputs
	input Skin(integer) : "Changes the model skin to the specified number."
	input DisableShadow(void) : "Turn shadow off."
	input EnableShadow(void) : "Turn shadow on."
	input AlternativeSorting(bool) : "Used to attempt to fix sorting problems when rendering. True activates, false deactivates"
	// Outputs
	output OnIgnite(void) : "Fired when this object catches fire."
	
	spawnflags(Flags) = 
	[
		1 : "Enable Physics" : 0
		2 : "Must Exist" : 0
		4 : "Absorb any dropped weapon type (will NOT drop previously held weapon to the ground when set to 1)" : 0
		8 : "Infinite items (overrides count)" : 0
	]	
]

//Just changing color in 2d view
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_pistol_b.mdl") 						= weapon_pistol_spawn : "Pistols" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_desert_eagle.mdl") 					= weapon_pistol_magnum_spawn : "Magnum Pistol" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_smg_uzi.mdl") 						= weapon_smg_spawn : "Submachinegun" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_shotgun.mdl") 						= weapon_pumpshotgun_spawn : "Pump Shotgun" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_autoshot_m4super.mdl")				= weapon_autoshotgun_spawn : "Auto Shotgun" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_rifle_m16a2.mdl") 					= weapon_rifle_spawn : "Assault Rifle" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_sniper_mini14.mdl") 					= weapon_hunting_rifle_spawn : "Hunting Rifle" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_smg_a.mdl") 							= weapon_smg_silenced_spawn : "MicroUZI" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_pumpshotgun_A.mdl") 					= weapon_shotgun_chrome_spawn : "Chrome Shotgun" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_shotgun_spas.mdl") 					= weapon_shotgun_spas_spawn : "SPAS Shotgun" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_rifle_B.mdl") 						= weapon_rifle_desert_spawn : "Desert Rifle" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_rifle_ak47.mdl") 					= weapon_rifle_ak47_spawn : "AK47" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_sniper_military.mdl") 				= weapon_sniper_military_spawn : "Military Sniper Rifle" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/weapons/melee/w_chainsaw.mdl") 							= weapon_chainsaw_spawn : "Chainsaw" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/weapons/w_grenade_launcher.mdl") 				= weapon_grenade_launcher_spawn : "Grenade Launcher" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_m60.mdl") 							= weapon_rifle_m60_spawn : "M60 Machinegun" []
// CSS Guns
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_smg_mp5.mdl") 						= weapon_smg_mp5_spawn : "MP5" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_rifle_sg552.mdl") 					= weapon_rifle_sg552_spawn : "SG552" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_sniper_awp.mdl") 					= weapon_sniper_awp_spawn : "AWP Sniper" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/Weapons/w_sniper_scout.mdl")					= weapon_sniper_scout_spawn : "Scout Sniper" []
// Grenades -----------------				
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/weapons/w_eq_pipebomb.mdl") 					= weapon_pipe_bomb_spawn : "Pipe Bomb" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/weapons/w_eq_molotov.mdl") 					= weapon_molotov_spawn : "Molotov" []
@PointClass color(0 255 0) base(WeaponSpawn) studioprop("models/w_models/weapons/w_eq_bile_flask.mdl") 					= weapon_vomitjar_spawn : "Vomit Jar" []
// Items ------------------
@PointClass color(0 255 0) base(WeaponSpawnSingle) studioprop("models/w_models/weapons/w_eq_Medkit.mdl") 				= weapon_first_aid_kit_spawn : "First Aid Kit" []
@PointClass color(0 255 0) base(WeaponSpawnSingle) studioprop("models/w_models/weapons/w_eq_painpills.mdl") 			= weapon_pain_pills_spawn : "Painkillers" []
@PointClass color(0 255 0) base(WeaponSpawnSingle) studioprop("models/w_models/weapons/w_eq_adrenaline.mdl") 			= weapon_adrenaline_spawn : "Adrenaline" []
@PointClass color(0 255 0) base(WeaponSpawnSingle) studioprop("models/w_models/weapons/w_eq_defibrillator.mdl") 		= weapon_defibrillator_spawn : "Defibrillator" []
@PointClass color(0 255 0) base(WeaponSpawnSingle) studioprop("models/props_junk/gascan001a.mdl") 						= weapon_gascan_spawn : "Gas Can" []
@PointClass color(0 255 0) base(WeaponSpawnSingle) studioprop("models/w_models/weapons/w_eq_incendiary_ammopack.mdl") 	= weapon_upgradepack_incendiary_spawn : "Upgrade Pack - Incendiary" []
@PointClass color(0 255 0) base(WeaponSpawnSingle) studioprop("models/w_models/weapons/w_eq_explosive_ammopack.mdl") 	= weapon_upgradepack_explosive_spawn : "Upgrade Pack - Explosive" []

@PointClass color(0 255 0) base(WeaponSpawnSingle) studioprop("models/w_models/weapons/w_eq_Medkit.mdl") 				= weapon_first_aid_kit : "Physics First Aid Kit - This entity is intended to be used in scripted events where a single item needs to spawned with physics active." []
@PointClass color(0 255 0) base(WeaponSpawnSingle) studioprop("models/w_models/weapons/w_grenade_launcher.mdl") 		= weapon_grenade_launcher : "Grenade Launcher - This entity is intended to be used in scripted events where a single item needs to spawned with physics active." []
///////////////////////////////////////////////////////////////////////////////////////
//removed studiomodel restriction, allowing use of custom models if required.
//Also removes prop_dynamic base because it has alot of unrelated keyvalues. added required keyvalues instead.
@PointClass color(0 255 0)base(Parentname, Global, Angles, EnableDisable, Targetname) studioprop("models/w_models/weapons/w_minigun.mdl") = prop_minigun_l4d1 : "A mounted gun players can +USE"
[
	model(studio) : "World model" : "models/w_models/weapons/w_minigun.mdl" : "Could be changed"
	MaxYaw(float) : "Max yaw" : "90" : "Max yaw the gun can be turned."
	MaxPitch(float) : "Max pitch" : "60" : "Max pitch the gun can be depressed."
	MinPitch(float) : "Min pitch" : "-30" : "Min pitch the gun can be raised."
	
	//inputs
	input SetBodyGroup(integer) : "Set the visible bodygroup, by index."
	input TurnOn(void) : "Make the prop visible."
	input TurnOff(void) : "Make the prop invisible."
	// Outputs
	output OnFireStart(void) : "Fired when the minigun has spun up and is starting firing."
	output OnFireStop(void) : "Fired when the minigun has stopped firing."
] 
//removed studiomodel restriction, allowing use of custom models if required.
//Also removes prop_dynamic base because it has alot of unrelated keyvalues. added required keyvalues instead.
@PointClass color(0 255 0)base(Parentname, Global, Angles, EnableDisable, Targetname) studioprop("models/w_models/weapons/50cal.mdl") = prop_mounted_machine_gun: "50 caliber mounted gun (+USE)"
[
//	model(studio) : "World model" : "models/w_models/weapons/50cal.mdl" : "Cannot be changed"
	MaxYaw(float) : "Max yaw" : "90" : "Max yaw the gun can be turned."
	MaxPitch(float) : "Max pitch" : "60" : "Max pitch the gun can be depressed."
	MinPitch(float) : "Min pitch" : "-30" : "Min pitch the gun can be raised."

	//inputs
	input SetBodyGroup(integer) : "Set the visible bodygroup, by index."
	input TurnOn(void) : "Make the prop visible."
	input TurnOff(void) : "Make the prop invisible."
	// Outputs
	output OnFireStart(void) : "Fired when the machine gun has starting firing."
	output OnFireStop(void) : "Fired when the machine gun has stopped firing."
]

//Upgrade_spawn with helper model
@PointClass base(Targetname, Angles)studioprop() = upgrade_spawn
[
	disableshadows(choices) : "Disable Shadows" : 1 : "Used to disable dynamic shadows on this entity. Disabled by default, because often times shadows of gun on tables are found on the floor. Which looks weird" =
	[
		0 : "No"
		1 : "Yes"
	]
	laser_sight(integer) : "Laser Sight" : 1
	upgradepack_incendiary(integer) : "UpgradePack - Incendiary" : 1
	upgradepack_explosive(integer) : "UpgradePack - Explosive" : 1
	
	spawnflags(Flags) =
	[
		1 : "Enable Physics on spawned item" : 0
		2 : "Spawned Item Must Exist" : 0
	]
	model(choices) : "Helper Model (Visual aid only)" : "models/w_models/weapons/w_laser_sights.mdl" =
	[
	"models/editor/upgrade_helper.mdl" 						: "Generic Helper" 
	"models/w_models/weapons/w_laser_sights.mdl" 			: "Laser"
	"models/w_models/weapons/w_eq_explosive_ammopack.mdl" 	: "Explosive Ammo"
	"models/w_models/weapons/w_eq_incendiary_ammopack.mdl"	: "Incendiary Ammo"
	]	
]