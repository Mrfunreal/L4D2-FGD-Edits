@BaseClass = BaseDamageTypeNew
[ 
	damagetype(choices) : "Damage Type" : 0 =
	[
		0			:	"GENERIC"										// DMG_GENERIC		
		1			:	"CRUSH      - Witches flinch"					// DMG_CRUSH					.	Makes witch flinch
		2			:	"BULLET     - Plays Bullet sounds"				// DMG_BULLET					.	Plays bullet impact sound on CI and Witch. Witch cries out in pain, does not get triggered.
		4			:	"SLASH       - Witches flinch"					// DMG_SLASH					.	Makes witch flinch
		8			:	"BURN         - Sets CI, SI & bots on fire"		// DMG_BURN						.	Sets CI, SI and bots on fire
		32			:	"FALL - Survivors are silent when incapped"		// DMG_FALL						.
		64			:	"BLAST      - Insta Kills CI, Stuns Bosses"		// DMG_BLAST					.	Insta Kills CI, Stuns SI, Stumbles witches and Tanks
		128			:	"CLUB       - Witches flinch"		// DMG_CLUB						.	Makes witch flinch
		32768		:	"FORCE INCAPACITATE"							// DMG_FORCE_INCAPACITATE		.	Instantly Incaps Survivors
		131072		:	"BLEEDOUT   - No damage indicator"				// DMG_POISON 					.	Has no Damage Indicator
		16777216	:	"FULLGIB    - Spawns gibs on damage"	// DMG_PLASMA (Fullgib)			.	Spawns Shotgun like gib particles until CI die and gib
		33554432	:	"STUMBLE    - Stumbles CI"						// DMG_STUMBLE					.	Melee bash type push on ci
		536870912	:	"BUCKSHOT   - Witches flinch, pushes CI"		// DMG_BUCKSHOT					.	Makes witch flinch, pushes CI away
		2048		:	"BLAMELESS FRIENDLY FIRE"						// DMG_BLAMELESS_FRIENDLY_FIRE	.
		0			:	" "	
		0			:	"Below here are useless Damage Types."	
		0			:	"They act the same on trigger_hurt"	
		0			:	" "	
		16			:	"VEHICLE"										// DMG_VEHICLE					.
		256			:	"SHOCK      - Missing Particle"					// DMG_SHOCK					.	Has a missing particle
		512			:	"SONIC"											// DMG_SONIC					.
		1024		:	"ENERGYBEAM"									// DMG_ENERGYBEAM				.
		4096		:	"NEVERGIB   - Doesn't work"						// DMG_NEVERGIB					.
		8192		:	"ALWAYSGIB  - Doesn't work"						// DMG_ALWAYSGIB				.
		16384		:	"DROWN"											// DMG_DROWN					.
		65536		:	"NERVEGAS"										// DMG_NERVEGAS					.	
		262144		:	"RADIATION"										// DMG_RADIATION	            .
		524288		:	"DROWNRECOVER"									// DMG_DROWNRECOVER	            .
		1048576		:	"CHOKE"											// DMG_CHOKE	                .
		2097152		:	"MELEE"											// DMG_MELEE	                .
		4194304		:	"REMOVENORAGDOLL"								// DMG_REMOVENORAGDOLL		    .
		8388608		:	"PHYSGUN"										// DMG_PHYSGUN		            .
		67108864	:	"DISSOLVE"										// DMG_DISSOLVE					.	
		134217728	:	"BLAST SURFACE"									// DMG_BLAST_SURFACE			.	
		268435456	:	"DIRECT"										// DMG_DIRECT					.	
		1073741824	:	"HEADSHOT"										// DMG_HEADSHOT					.	
		2147483648	:	"DISMEMBER  - !!! BROKEN !!!"					// DMG_DISMEMBER				.	applies all previously encoutnered special effects (burn, sparks, stagger)

		// DMG_BURN    
		// DMG_BLAST_SURFACE   
		// DMG_BLAST   
		// DMG_STUMBLE 
		// DMG_MELEE   
		// DMG_BUCKSHOT    
		// DMG_BULLET  
		// DMG_HEADSHOT
		// DMG_DISMEMBER   
		// DMG_DIRECT  
		// DMG_DISSOLVE   
		// DMG_AIRBOAT 
		// DMG_PLASMA  
		// DMG_PHYSGUN 
		// DMG_REMOVENORAGDOLL 
		// DMG_SLOWBURN   
		// DMG_CHOKE   
		// DMG_DROWNRECOVER    
		// DMG_RADIATION   
		// DMG_POISON  
		// DMG_NERVEGAS    
		// DMG_FORCE_INCAPACITATE  
		// DMG_DROWN   
		// DMG_ALWAYSGIB   
		// DMG_NEVERGIB    
		// DMG_BLAMELESS_FRIENDLY_FIRE 
		// DMG_ENERGYBEAM  
		// DMG_SONIC   
		// DMG_SHOCK   
		// DMG_CLUB    
		// DMG_FALL    
		// DMG_VEHICLE 
		// DMG_SLASH   
		// DMG_CRUSH
		// DMG_GENERIC

	]
]

@FilterClass base(BaseFilter, BaseDamageTypeNew) = filter_damage_type :
	"A damage filter that filters by the type of damage inflicted. This can only be used as a damage filter, not as an activator filter."
[
]
@PointClass base(Targetname, BaseDamageTypeNew) sphere(DamageRadius) = point_hurt :
	"An entity that does damage to all entities in a radius around itself, with a specified delay." +
	"If 'Target Entity' is specified, the damage is only done to that entity."
[
	DamageTarget(string) : "Target Entity" : "" : "If specified, only this entity will take damage. Otherwise, all entities within the Radius will take damage."
	
	DamageRadius(float) : "Radius" : 256 : "All entities within this radius of this entity will take damage. If a 'Target Entity' is specified, only that entity will take damage."
	Damage(integer) : "Damage" : 5 : "Damage done to all affected entities each time this entity fires."
	DamageDelay(float) : "Delay" : 1 : "Delay between refires, in seconds."
	
	// Inputs
	input Hurt(void) : "Force a single fire, damaging either the Target Entity or all entities within the radius."
	input TurnOn(void) : "Enable this entity. It will start damaging entities everytime it fires, and refire based upon the specified Delay."
	input TurnOff(void) : "Disable this entity. It will stop damaging entities."
	input Toggle(void) : "Toggle this entity between On/Off state."
]

@SolidClass base(Trigger, Targetname, BaseDamageTypeNew) = trigger_hurt :
	"A trigger volume that damages entities that touch it."
[
	master(string) : "Master (Obsolete)" : : "Legacy support: The name of a master entity. If the master hasn't been activated, this entity will not activate."
	damage(integer) : "Damage" : 10 : "The amount of damage done to entities that touch this trigger. The damage is done every half-second. See also 'Damage Model' for extra details on how damage can be dealt."
	damagecap(integer) : "Damage Cap" : 20 : "Maximum damage dealt per second. This field is only used if you select the Doubling w/Forgiveness damage model, via the spawnflag."


	damagemodel(choices) : "Damage Model" : 0 : "How damage is dealt. Normal always does the specified amount of damage each half second. Doubling starts with the specified amount and doubles it each time it hurts the toucher. Forgiveness means that if the toucher gets out of the trigger the damage will reset to the specified value. Good for making triggers that are deadly over time without having to cause massive damage on each touch." =
	[
		0 : "Normal"
		1 : "Doubling w/forgiveness"
	]
	
	nodmgforce(choices) : "Zero Damage Force" : 0 : "Should the damaged entity receive no physics force from this trigger." =
	[
		0 : "No"
		1 : "Yes"
	]
	damageforce(vector) : "Damage Force Override"

	thinkalways(choices) : "Always think every frame" : 0 : "Normally triggers think every half second, in some cases you may need to request it to damage every frame.  This is expensive!" =
	[
		0 : "No"
		1 : "Yes"
	]
	
	// Inputs
	input SetDamage(float) : "Set a new amount of damage for this trigger."
	
	// Outputs
	output OnHurt(void) : "Fired whenever this trigger hurts something other than a player."
	output OnHurtPlayer(void) : "Fired whenever this trigger hurts a player."
]
@SolidClass base(trigger_hurt) = trigger_hurt_ghost :
	"Literally a copy of trigger_hurt, but with less options by default. This is basically useless. DOES NOT HURT GHOSTS AT ALL."
[

]