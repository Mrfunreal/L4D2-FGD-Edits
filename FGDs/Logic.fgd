@BaseClass = Targetname 
[ 
	targetname(target_source) : "Name" : : "The name that other entities refer to this entity by."
	
	vscripts(scriptlist) : "Entity Scripts" : "" : "Name(s) of script files that are executed after all entities have spawned."
	thinkfunction(string) : "Script think function" : "" : "Name of a function in this entity's script scope which will be called automatically."

	// Inputs
	input RunScriptFile(script) : "Execute a game script file from disk"
	input RunScriptCode(string) : "Execute a string of script source code"
	//PLAYER ONLY
	input IgnoreFallDamageWithoutReset(integer) : "PLAYER ONLY - Disable fall damage for N seconds"
	input SetCommentaryStatueMode(string) 		: "PLAYER ONLY - ?"
	input DisableLedgeHang(integer) 			: "PLAYER ONLY - Disable ledge hanging until turned back on."
	input EnableLedgeHang(integer) 				: "PLAYER ONLY - Enable ledge hanging."
	input TeleportToSurvivorPosition(integer) 	: "PLAYER ONLY - Teleport a player to an info_survivor_position entity, then freezes them. To unfreeze them, use the ReleaseSurvivorPositions input from info_director or the player's ReleaseFromSurvivorPosition input."
	input ReleaseFromSurvivorPosition(integer) 	: "PLAYER ONLY - Unfreezes and releases the player from an info_survivor_position entity if they are at one."
	input SetGlowEnabled(integer) 				: "PLAYER ONLY - Sets if this player is allowed to glow through walls if not visible."
	input RemoveWeaponUpgrades(integer) 		: "PLAYER ONLY - Removes laser sights from guns."
	input CancelCurrentScene(integer) 			: "PLAYER ONLY - Makes the player's character quit talking immediately."

	// Inputs
	input Kill(void) : "Removes this entity from the world."
	input KillHierarchy(void) : "Removes this entity and all its children from the world."
	input AddOutput(string) : "Adds an entity I/O connection to this entity. Format: <output name> <targetname>:<inputname>:<parameter>:<delay>:<max times to fire (-1 == infinite)>. Very dangerous, use with care."
	input FireUser1(void) : "Causes this entity's OnUser1 output to be fired."
	input FireUser2(void) : "Causes this entity's OnUser2 output to be fired."
	input FireUser3(void) : "Causes this entity's OnUser3 output to be fired."
	input FireUser4(void) : "Causes this entity's OnUser4 output to be fired."

	// Outputs	
	output OnUser1(void) : "Fired in response to FireUser1 input."
	output OnUser2(void) : "Fired in response to FireUser2 input."
	output OnUser3(void) : "Fired in response to FireUser3 input."
	output OnUser4(void) : "Fired in response to FireUser4 input."
	
	output OnKilled(void) : "Fired when the entity is killed and removed from the game."
]

//Gives info_director a default name
@PointClass base(Targetname) iconsprite("Editor/new/info_director.vmt") = info_director
[
	targetname(target_source) : "Name" : "info_director" : "The name that other entities refer to this entity by."

	// Inputs
	input PanicEvent(void) : "Fired when a major event happens that the director should know about."
	input ScriptedPanicEvent(string) : "Fired when a custom panic event wants to happen."
	input ForcePanicEvent(void) : "Trigger a panic event, no matter what else is going on."
	input EndCustomScriptedStage(void) : "End a custom scripted stage."
	input ForceSurvivorPositions(void) : "Make each survivor stand at an info_survivor_position."
	input ReleaseSurvivorPositions(void) : "Allow survivors to move freely again."
	input FireConceptToAny(string) : "Fire a speech concept to any survivor that is capable of speaking it."
	input IncrementTeamScore(integer) : "Increment a team's score. (2=survivors, 3=infected)"
	input StartIntro(void) : "Fire when the intro starts."
	input FinishIntro(void) : "Fire when the intro ends."
	input BeginScript(string) : "Begin a director script"
	input EndScript(void) : "End a director script"

	// Journaling inputs
	input CreateNewJournal(string) : "Create a new journal"
	input WriteToJournal(string) : "Add a task to the I/O Journal"
	input ExecuteJournal(string) : "Execute all tasks in the specified journal"
	
	input EnableTankFrustration(void) : "Can be used to enable the tank frustration meter."
	input DisableTankFrustration(void) : "Can be used to disable the tank frustration meter."


	// Outputs
	output OnGameplayStart(void) : "Fired when a map loads, all players join and gameplay begins."
	output OnCustomPanicStageFinished(void) : "Fired when each stage of a custom panic event or custom finale finishes."
	output OnPanicEventFinished(void) : "Fired when a panic event is finished."
	output OnTeamScored(void) : "Fired when a team places a scavenge item in the scavenge goal."

	output OnScavengeRoundStart(void) : "Fired when a scavenge round starts."
	output OnScavengeOvertimeStart(void) : "Timer has run out and game went into overtime."
	output OnScavengeOvertimeCancel(void) : "Time was added to the clock, ending overtime."
	output OnScavengeTimerExpired(void) : "Time has run out, game did not enter overtime."
	output OnScavengeIntensityChanged(Integer) : "Intensity level has changed. 1 = highest intensity, decreases as number gets larger."
	
	output OnUserDefinedScriptEvent1(void) : "generic user defined event fired from a squirrel script"
	output OnUserDefinedScriptEvent2(void) : "generic user defined event fired from a squirrel script"
	output OnUserDefinedScriptEvent3(void) : "generic user defined event fired from a squirrel script"
	output OnUserDefinedScriptEvent4(void) : "generic user defined event fired from a squirrel script"
	
]
 //MORE LESSONS
@PointClass base(Targetname) iconsprite("editor/info_game_event_proxy.vmt") = info_game_event_proxy
[
//	event_name(string) : "Name of the event to generate"
	event_name(choices) : "Name of the event to generate" : "explain_c3m4_radio1" : "Hint text to display. You may also manually enter an event."=
		[
			"explain_c3m4_radio1"									: "Call for a boat rescue"
			"explain_c3m4_rescue"									: "The rescue boat has arrived, get on board!"
			"explain_vehicle_arrival"								: "Hurry to the rescue vehicle!"
			"board_chopper"											: "Rescue has arrived! Get aboard!"
			"explain_pre_radio"										: "Answer the radio"
			"explain_radio"											: "Summon a rescue"
			"explain_radio2"										: "Prepare yourself before you respond"
			"explain_rescue"										: "Rescue Survivors"
			"notify_awaiting_rescue"								: "You will be rescued soon"
			"survive_rescue"										: "Rescue is coming! Defend yourselves!"
			"Gauntlet"												: "Make your way to the helicopter on the other side"
			"ability_out_of_range"									: "Get closer - that target is out of range"
			"save_items"											: "You may want to save some items for the return trip"
			"explain_return_to_elevator"							: "Return to the elevator!"
			"porch_light"											: "Turn on porch lights to mark locations with items"
			"explain_c1m4_finale1"									: "You'll need to fill the car with gas"
			"explain_c1m4_finale2"									: "Step 1: Find a gas can"
			"explain_c1m4_finale3"									: "Step 2: Bring the gas can to the car"
			"explain_c2m4_ticketbooth"								: "Press the button to open the gates"
			"explain_c3m4_radio2"									: "Respond to Virgil"
			"explain_c4m4_finale_no_gas"							: "You should bring the gas can here before you flip the switch"
			"explain_c4m4_finale_start"								: "Signal the boat with the Burger Tank sign"
			"explain_carousel_destination"							: "Shut down the carousel"
			"explain_carousel_start"								: "Turn on the power to open the gate"
			"explain_carousel_start2"								: "Run to the control booth to shut down the carousel"
			"explain_coaster"										: "Power up the coaster to start the ride"
			"explain_coaster_stop"									: "Deactivate the ride to stop the alarm"
			"explain_deactivate_alarm"								: "Deactivate the alarm to open the exit doors"
			"explain_decon"											: "Release door to exit the trailer"
			"explain_decon_wait"									: "Close the door when everyone is in the trailer"
			"explain_drawbridge"									: "Press the button to lower the drawbridge"
			"explain_ferry"											: "Call the ferry"
			"explain_float"											: "Move the float"
			"explain_gates_are_open"								: "The gates are open, run for the safe room!"
			"explain_gun_shop"										: "Talk to the gun shop owner"
			"explain_gun_shop_tanker"								: "Whitaker will destroy this tanker and clear the path"
			"explain_hatch"											: "Open the hatch"
			"explain_help_return_item"								: "Escort the cola delivery"
			"explain_hotel_elevator_doors"							: "Pry open the doors to escape..."
			"explain_mall_alarm"									: "Deactivate the alarm on the third floor"
			"explain_mall_window"									: "Shoot out the store window"
			"explain_perimeter1"									: "Alarm will sound when perimeter is breached"
			"explain_perimeter2"									: "Run to the security tower to deactivate the alarm"
			"explain_pre_drawbridge"								: "Use the radio to call for help"
			"explain_return_item"									: "Deliver the cola to the gun shop owner"
			"explain_shack"											: "Lower the bridge"
			"explain_stage_finale_start"							: "Begin the rock concert to signal the chopper"
			"explain_stage_lighting"								: "Prepare the stage lighting"
			"explain_stage_lighting"								: "Set the stage lighting"
			"explain_stage_survival_start"							: "Begin the rock concert..."
			"explain_store_alarm"									: "Open the store door..."
			"explain_store_item"									: "Retrieve the cola inside the store"
			"explain_survival_help_alarm"							: "Activate the alarm..."
			"explain_survival_help_button"							: "Press the button..."
			"explain_survival_help_radio"							: "Use the radio..."
			"temp_msg_c4m1"											: "Go get fuel and return to the boat"
			"temp_msg_c4m3"											: "You got the fuel - Return to the boat"
			"explain_bridge"											: "Close the floodgate to make a bridge..."
			"explain_church_door"									: "Tell him to let you in the safe room..."
			"explain_close_safe_room"								: "Close the door once everyone is in"
			"explain_crane"											: "Use the lever to lower the crane..."
			"explain_elevator_button"								: "Call the elevator..."
			"explain_emergency_door"									: "Open the emergency door..."
			"explain_enter_safe_room"								: "Get into the safe room"
			"explain_gas_can_panic"									: "Destroy the barricade..."
			"explain_gas_truck"										: "Activate the fuel pump"
			"explain_lift_button"									: "Start the lift..."
			"explain_mainstreet"										: "Lower the forklift to make a ramp..."
			"explain_panic_button"									: "Flip the door switch..."
			"explain_panic_button2"									: "Be ready to fight the horde"
			"explain_panic_disturbance_triggered2"					: "Here they come..."
			"explain_train_lever"									: "Hit the bridge with the decoupled train car..."
			"explain_use_door"										: "Open/close door"
			"explain_van_panic"										: "Start the van to clear a path..."
			"explain_wait_to_exit_safe_room"							: "Not all of your teammates are ready"
			"explain_wait_to_push_button"							: "Wait for everyone to be ready first"
//			"rescued_by"											: "%s1 rescued you"
//			"rescued_other"											: "You rescued %s1"
//			"revive_end"											: "Hold to revive %s1"
//			"saved_by"												: "%s1 saved you"
//			"saved_other"											: "You saved %s1"
//			"explain_ammo_pile_failure"								: "You cannot refill the ammo of this weapon."
//			"explain_explosive_ammo_available"						: "Explosive Ammo Available"
//			"explain_explosive_ammo_received"						: "You picked up Explosive Ammunition"
//			"explain_gun_shop_item"									: "Cola"
			"explain_gun_shop_item_get"								: "Get the cola"
			"explain_incendiary_ammo_available"						: "Incendiary Ammo Available"
//			"explain_incendiary_ammo_received"						: "You picked up Incendiary Ammunition"
			"explain_laser_sight_available"							: "Laser Sight Upgrade Available"
			"explain_laser_sight_received"							: "The Laser Sight upgrade makes your weapon more accurate"
//			"explain_magnum_pistol"									: "Magnum Pistol"
//			"explain_magnum_pistol_alt"								: "Desert Cobra Pistol"
//			"explain_magnum_pistol_get"								: "Get magnum pistol"
//			"explain_magnum_pistol_get_alt"							: "Get Desert Cobra"
			"explain_mounted_gun_overheated"						: "The gun has temporarily overheated and is unusable!"
//			"explain_replace_ammo"									: "Fully-Loaded %s1"
//			"explain_replace_ammo_get"								: "Replace your low-ammo weapon"
//			"explain_trade_melee_for_magnum_pistol"					: "Trade melee weapon for magnum pistol"
			"explain_upgrade"										: "Upgrade Item Available"
//			"explain_use_mounted_gun"								: "Heavy Machine Gun"
//			"explain_2nd_pistol"									: "Second Pistol"
//			"explain_2nd_pistol_get"								: "Get second pistol"
//			"explain_adrenaline"									: "Adrenaline"
//			"explain_adrenaline_get"								: "Get adrenaline"
			"explain_ammo_pack"										: "Ammo Pack"
			"explain_ammo_pack_get"									: "Get ammo pack"
			"explain_ammo_resupply"									: "Ammo stash"
			"explain_ammo_resupply_get"								: "Replenish ammo"
//			"notify_give_ammo_other_near"							: "Hold %+attack2% to give ammo to %s1"
			"notify_give_ammo_self"									: "Refill your ammo with the ammo pack"
			"notify_give_ammo_self_hold"							: "Hold %+attack% to refill your ammo"
//			"notify_failed_to_use_ammo_pack_no_weapon_on_other"		: "%s1 doesn't need ammo right now"
			"notify_failed_to_use_ammo_pack_no_weapon_on_self"		: "You don't need ammo right now"
//			"notify_failed_to_use_ammo_pack_full_on_other"			: "%s1 already has full ammo"
			"notify_failed_to_use_ammo_pack_full_on_self"			: "You already have full ammo"
			"notify_failed_to_use_ammo_pack_doesnt_use_ammo"		: "You don't need ammo right now"
//			"notify_failed_to_use_ammo_pack_other_doesnt_use_ammo"	: "%s1 doesn't need ammo right now"
//			"explain_autoshotgun"									: "Tactical Shotgun"
//			"explain_autoshotgun_get"								: "Get tactical shotgun"
//			"explain_chainsaw"										: "Chainsaw"
//			"explain_chainsaw_get"									: "Get chainsaw"
//			"explain_defibrillator"									: "Defibrillator"
//			"explain_defibrillator_get"								: "Get defibrillator"
//			"explain_first_aid"										: "First aid"
//			"explain_first_aid_get"									: "Get first aid"
//			"explain_grenade_launcher"								: "Grenade Launcher"
//			"explain_grenade_launcher_get"							: "Get Grenade Launcher"
//			"explain_grenade_limit"									: "You can only carry one throwable item"
//			"explain_heal_interrupted"								: "Hold %+attack% to heal yourself"
//			"explain_heal_other_interrupted"							: "Hold %+attack2% to heal %s1"
//			"explain_hunting_rifle"									: "Hunting Rifle"
//			"explain_hunting_rifle_get"								: "Get hunting rifle"
//			"explain_inventory"										: "Select weapon/item"
//			"explain_melee"											: "Melee Weapon"
//			"explain_melee_get"										: "Get melee weapon"
//			"explain_molotov"										: "Molotov"
//			"explain_molotov_get"									: "Get molotov"
//			"explain_pickup_item"									: "Pick up"
//			"explain_pills"											: "Pain Pills"
//			"explain_pills_get"										: "Get pain pills"
//			"explain_pipebomb"										: "Pipe Bomb"
//			"explain_pipebomb_get"									: "Get pipe bomb"
//			"explain_pistol"										: "Pistol"
//			"explain_pistol_ammo"									: "Pistols have unlimited ammo"
//			"explain_pumpshotgun"									: "Pump Shotgun"
//			"explain_pumpshotgun_get"								: "Get pump shotgun"
//			"explain_reload"										: "Manual reload"
//			"explain_rifle"											: "M-16 Assault Rifle"
//			"explain_rifle_ak47"									: "AK-47"
//			"explain_rifle_ak47_alt"								: "Soviet Rifle"
//			"explain_rifle_ak47_get"								: "Get AK-47"
//			"explain_rifle_ak47_get_alt"							: "Get soviet rifle"
//			"explain_rifle_desert"									: "Combat Rifle"
//			"explain_rifle_desert_alt"								: "Desert Combat Rifle"
//			"explain_rifle_desert_get"								: "Get combat rifle"
//			"explain_rifle_desert_get_alt"							: "Get desert combat rifle"
//			"explain_rifle_get"										: "Get M-16 assault rifle"
//			"explain_rifle_zoom"									: "Hunting/sniper rifle scope"
//			"explain_shotgun_chrome"								: "Chrome Shotgun"
//			"explain_shotgun_chrome_get"							: "Get chrome shotgun"
//			"explain_shotgun_spas"									: "Combat Shotgun"
//			"explain_shotgun_spas_get"								: "Get combat shotgun"
//			"explain_smg"											: "Submachine Gun"
//			"explain_smg_get"										: "Get submachine gun"
//			"explain_smg_silenced"									: "Silenced Submachine Gun"
//			"explain_smg_silenced_get"								: "Get silenced submachine gun"
//			"explain_sniper_military"								: "Sniper Rifle"
//			"explain_sniper_military_get"							: "Get sniper rifle"
//			"explain_trade_melee_for_pistol"						: "Trade melee weapon for pistol"
//			"explain_upgradepack_explosive"							: "Explosive Ammo Pack"
//			"explain_upgradepack_explosive_get"						: "Get Explosive Ammo Pack"
//			"explain_upgradepack_incendiary"						: "Incendiary Ammo Pack"
//			"explain_upgradepack_incendiary_get"					: "Get Incendiary Ammo Pack"
//			"explain_use_turret"									: "Use turret"
//			"explain_vomitjar"										: "Boomer Bile"
//			"explain_vomitjar_get"									: "Get Boomer Bile"
			"explain_weapon"										: "Weapon"
//			"upgradepack_usage"										: "Deploy Ammo Packs on the ground to share ammo with the team"
//			"notify_failed_to_give_duplicate_pills"					: "%s1 already has pain pills"
//			"notify_failed_to_use_explosive_ammo_pile"				: "You have already used this Explosive Ammo upgrade"
//			"notify_failed_to_use_incendiary_ammo_pile"				: "You have already used this Incendiary Ammo upgrade"
//			"notify_failed_to_use_pills"							: "You don't need to take pain pills"
//			"notify_upgrade_failed_no_primary"						: "You must have a primary weapon to use this upgrade"
//			"notify_given_item_pain_pills"							: "%s1 gave you pain pills"
//			"notify_heal_other"										: "Heal %s1 with first aid"
//			"notify_heal_other_far"									: "Move closer to heal %s1"
//			"notify_heal_other_near"								: "Hold %+attack2% to heal %s1"
//			"notify_heal_other_near_select"							: "Select first aid kit"
//			"notify_heal_self"										: "Heal yourself with first aid"
//			"notify_heal_self_hold"									: "Hold %+attack% to heal yourself"
			"notify_infected_behind"								: "Face rear enemies"
//			"notify_pill_self"										: "Take pain pills for a temporary health boost"
//			"notify_shove_boomer"									: "Shove Boomers back before shooting"
//			"notify_shove_infected"									: "Shove them back!"
			"notify_communicate"									: "Communicate with teammates"
//			"notify_crouch_accuracy"								: "Crouching improves accuracy"
//			"notify_crouch_tactic"									: "Crouching helps teammates shoot over you"
//			"explain_friendly_fire"									: "Don't shoot teammates!"
//			"explain_friendly_fire_melee"							: "Don't attack teammates!"
//			"explain_reckless"										: "Stay out of the line of fire!"
//			"notify_last_life"										: "First aid needed! Next knockdown means death..."
			"notify_fire_damage"									: "Get away from the fire!"
			"notify_stay_together"									: "Stay together to survive"
//			"notify_failed_to_use_defibrillator"					: "%s1 doesn't need to be revived"
//			"notify_use_defibrillator"								: "Revive %s1 with the defibrillator"
//			"notify_use_defibrillator_hold"							: "Hold %+attack% or %+attack2% to revive %s1"
//			"defibrillator_usage"									: "Use the Defibrillator to revive dead players"
//			"help_it"												: "A Boomer has vomited on %s1"
//			"help_choked"											: "A Smoker is constricting %s1"
//			"help_choked_near"										: "Free %s1"
//			"help_choked_far"										: "Shoot the Smoker"
//			"help_pounced"											: "A Hunter has pinned %s1"
//			"help_pounced_near"										: "Shove the Hunter"
//			"help_pounced_far"										: "Shoot the Hunter"
//			"help_jockey_ridden"									: "A Jockey is riding %s1"
//			"help_jockey_ridden_near"								: "Shove the Jockey"
//			"help_jockey_ridden_far"								: "Shoot the Jockey"
//			"help_charger_pummeled"									: "A Charger is pummeling %s1"
//			"help_charger_pummeled_kill"							: "Kill the Charger"
//			"explain_tank"											: "Tanks can absorb a lot of damage before they die"
//			"notify_give_pills"										: "You can give %s1 pain pills"
//			"notify_give_pills_far"									: "Move closer to give %s1 pain pills"
//			"notify_give_pills_near"								: "Give %s1 pain pills"
//			"notify_give_pills_near_select"							: "Select pain pills"
//			"explain_pill_temp_health"								: "Pain pills give you a temporary health boost"
//			"notify_ledge"											: "A teammate must pull you up"
//			"help_incapacitated"									: "Help %s1 up"
//			"help_ledge"											: "Pull %s1 up"
//			"notify_dead"											: "You died! Please wait to respawn..."
//			"notify_dead_by_witch1"									: "The Witch killed you! Don't startle her next time..."
//			"notify_dead_by_witch2"									: "Witches are startled by flashlights and gunfire"
//			"notify_incapacitated"									: "Incapacitated! A teammate must help you"
//			"notify_incapacitated_by_witch"							: "The Witch injured you! Don't startle her next time..."
//			"notify_it1_vomit"										: "A Boomer vomited on you"
//			"notify_it1_splatter"									: "A Boomer exploded on you"
//			"notify_it1_jar"										: "A Survivor bile bombed you"
//			"notify_it2"											: "Watch out! Boomer bile attracts the horde..."
//			"notify_pounced"										: "Pinned! A teammate must help..."
//			"notify_choked"											: "Constricted! A teammate must help..."
//			"notify_charger_pummeled"								: "Pummeled! A teammate must help..."
//			"notify_adrenaline_self"								: "Take adrenaline for a temporary speed boost"
//			"notify_given_item_adrenaline"							: "%s1 gave you adrenaline"
//			"notify_give_adrenaline"								: "You can give %s1 your adrenaline"
//			"notify_give_adrenaline_far"							: "Move closer to give %s1 your adrenaline"
//			"notify_give_adrenaline_near"							: "Give %s1 your adrenaline"
//			"notify_give_adrenaline_near_select"					: "Select adrenaline"
//			"adrenaline_usage"										: "Adrenaline lets you perform many actions faster"
//			"notify_failed_to_give_duplicate_belt_item"				: "%s1 already has a belt slot item"
			"explain_panic_disturbance"								: "Watch out! Some cars set off alarms..."
//			"explain_panic_disturbance_triggered"					: "%s1 alerted the horde"
			"explain_panic_disturbance_triggered2"					: "Here they come..."
//			"explain_witch_spooked"									: "%s1 startled the Witch"
//			"explain_witch_spooked2"								: "You startled the Witch"
			"explain_acid_spit"										: "Try to avoid the noxious acid!"
			"notify_entered_spit"									: "Avoid the noxious acid!"
//			"notify_ridden"											: "Keep moving! Resist the Jockey's influence..."
			"earned_bronze_medal"									: "You earned the bronze medal!"
			"earned_silver_medal"									: "You earned the silver medal!"
			"earned_gold_medal"										: "You earned the gold medal!"
			"player_record"											: "You beat your best time!"
			"team_record"											: "You beat your team record!"
			"world_record"											: "You beat the world record!"
//			"explain_survivor_glows_disabled"						: "Glows around fellow Survivors are disabled!"
//			"explain_item_glows_disabled"							: "Glows around items are disabled. Search carefully!"
//			"explain_rescue_disabled"								: "Rescues are disabled. Players can only respawn at safe rooms."
//			"explain_bodyshots_reduced"								: "Zombies take less damage to the body. Aim for the head!"
//			"explain_witch_kills"									: "The Witch will kill you instantly. Watch out for her!"
//			"notify_grenade_launcher_range"							: "Ouch! You are too close to your grenade launcher blasts!"
			"explain_impound_lot"									: "Watch your fire! Car alarms everywhere!"
			"explain_scavenge_goal_survivor"						: "Collect gas cans and pour them into the generator..."
//			"explain_scavenge_goal_infected"						: "Stop the survivors before they collect all of the gas cans"
//			"begin_scavenge_overtime_survivor"						: "OVERTIME: At least one survivor must be carrying a gas can!"
//			"begin_scavenge_overtime_infected"						: "OVERTIME: Force all survivors to drop their gas cans!"
//			"scavenge_score_tied"									: "One more point and the survivors win this round!"
			"exaplin_scavenge_leave_area"							: "Leaving this area will start the round"
//			"explain_scavenge_vulnerable_cans"						: "Dropped gas cans are vulnerable to Spitter goo"
//			"explain_gascan_pour_blocked"							: "Wait! someone else is still pouring..."
//			"boomer_claw"											: "SECONDARY ATTACK: CLAW"
//			"boomer_vomit"											: "PRIMARY ATTACK: VOMIT"
//			"hunter_claw"											: "SECONDARY ATTACK: CLAW"
//			"hunter_lunge"											: "PRIMARY ATTACK: CROUCH TO POUNCE"
//			"smoker_claw"											: "SECONDARY ATTACK: CLAW"
//			"smoker_tongue"											: "PRIMARY ATTACK: TONGUE SNARE"
//			"spitter_claw"											: "SECONDARY ATTACK: CLAW"
//			"spitter_goo"											: "PRIMARY ATTACK: SPIT"
//			"charger_claw"											: "SECONDARY ATTACK: CLAW"
//			"charger_charge"										: "PRIMARY ATTACK: CHARGE"
//			"jockey_claw"											: "SECONDARY ATTACK: CLAW"
//			"jockey_jump"											: "PRIMARY ATTACK: LUNGE"
//			"tongue_break_bent"										: "Tongue broke! It bent or stretched too far..."
//			"tongue_break_shove"									: "Tongue broke! Victim was shoved..."
//			"tongue_break_shot"										: "Tongue broke! It was damaged..."
//			"tank_claw"												: "SECONDARY ATTACK: THROW"
//			"tank_rock"												: "PRIMARY ATTACK: PUNCH"
//			"break_checkpoint_door"									: "YOU CAN'T BREAK DOWN SAFE ROOM DOORS"
//			"break_rescue_doors"									: "YOU CAN'T BREAK DOWN RESCUE DOORS"
//			"prevent_rescue"										: "A RESCUE TEAM IS ON ITS WAY. KILL THE SURVIVORS BEFORE IT GETS HERE..."
//			"prevent_escape"										: "PREVENT THE SURVIVORS FROM ESCAPING"
//			"notify_choked_miss"									: "Missed: No target"
//			"notify_riding_survivor"								: "Steer the Survivor into danger"
		]

	range(float) : "Range" : "50" : "How near the player must be to determine visibility. THIS IS IN FEET"

	spawnflags(flags) =
	[
		1: "Fire Automatically When First Seen" : 0
	]

	// Inputs
	input GenerateGameEvent(void) : "Generate my game event. (This entity is sent as the SUBJECT)"
]

//Removing useless globalstates from logic_auto
@PointClass iconsprite("editor/logic_auto.vmt") = logic_auto : 
	"Fires outputs when a map spawns. " +
	"If 'Remove on fire' flag is set the logic_auto is deleted after firing. " +
	"It can be set to check a global state before firing. This allows you to only fire events based on "+
	"what took place in a previous map."
[
	spawnflags(Flags) =
	[
		1 : "Remove on fire" : 1
	]
	
	globalstate(choices) : "Global State to Read" : : "If set, this specifies a global state to check before firing. The OnMapSpawn output will only fire if the global state is set." =
	[
		"" : "--- None ---"
		"is_console" : "Game is running on a console"
		"is_pc" : "Game is running on a PC"
	]
	
	// Outputs
	output OnMapSpawn(void) : "Fired when the map is loaded for any reason."
	output OnNewGame(void) : "Fired when the map is loaded to start a new game."
	output OnLoadGame(void) : "Fired when the map is loaded from a saved game."
	output OnMapTransition(void) : "Fired when the map is loaded due to a level transition."
	output OnBackgroundMap(void) : "Fired when the map is loaded as a background to the main menu."
	output OnMultiNewMap(void) : "Fired only in multiplayer, when a new map is loaded."
	output OnMultiNewRound(void) : "Fired only in multiplayer, when a new round is started. Only fired in multiplayer games that use round-based gameplay."
	output OnDemoMapSpawn(void) : "Fired when the map is loaded in Demo Mode."
]
// Relay with more colored sprites to ceep "Circuts" apart.
@PointClass base(Targetname, EnableDisable) iconsprite() = logic_relay :
	"A message forwarder. Fires an OnTrigger output when triggered, and " +
	"can be disabled to prevent forwarding outputs.\n\n" +
	"Useful as an intermediary between one entity and another for turning " +
	"on or off an I/O connection, or as a container for holding a set of " +
	"outputs that can be triggered from multiple places."
[

	model(choices) : "Helper Sprite" : "editor/logic_relay.vmt" : "Visual aid to keep 'Circuts' apart.\n Example:\n Versus only relays could be pink.\n Coop relays blue.\n All relays related to giane mechanism yellow, ect..."=
	[
	"editor/logic_relay.vmt" : "Default"
	"editor/new/logic_relay1.vmt" : "Red"
	"editor/new/logic_relay4.vmt" : "Pink"
	"editor/new/logic_relay5.vmt" : "Violet"
	"editor/new/logic_relay6.vmt" : "Purple"
	"editor/new/logic_relay7.vmt" : "Dark Blue"
	"editor/new/logic_relay8.vmt" : "Turquoise"
	"editor/new/logic_relay10.vmt" : "Green"
	"editor/new/logic_relay11.vmt" : "Lime"
	"editor/new/logic_relay12.vmt" : "Yellow"
	"editor/new/logic_relay13.vmt" : "Orange"
	]

	spawnflags(flags) =
	[
		1: "Only trigger once" : 0
		2: "Allow fast retrigger" : 0
	]

	// Inputs
	input Trigger(void) : "Trigger the relay, causing its OnTrigger output to fire if it is enabled."
	input Toggle(void) : "Toggle the relay between enabled and disabled."
	input CancelPending(void) : "Cancel any events fired by this relay that are currently pending in the I/O event queue."
	
	// Outputs
	output OnSpawn(void) : "Fired when the relay is spawned. If the relay is set to only trigger once, it will "+
		"delete itself after firing this output."
	output OnTrigger(void) : "Fired when the relay is triggered. If the relay is set to only trigger once, it will "+
		"delete itself after firing this output."
]
//Commands with sprites
@PointClass base(Targetname)  iconsprite("Editor/new/point_clientcommand.vmt")= point_clientcommand : 
	"An entity that issues commands to the client console, as if it was typed in by the player (if activator is a player, or the local player in single player)."
[
	// Inputs
	input Command(string) : "Command to execute."
]

@PointClass base(Targetname)  iconsprite("Editor/new/point_servercommand.vmt")= point_servercommand : 
	"An entity that issues commands to the server console."
[
	// Inputs
	input Command(string) : "Command to execute."
]

@PointClass base(Targetname) iconsprite("Editor/new/point_broadcastclientcommand.vmt")= point_broadcastclientcommand : 
	"An entity that issues commands to each valid client's console, as if it was typed in by that player locally."
[
	// Inputs
	input Command(string) : "Command to execute."
]

//Func instance description
@PointClass base(Angles) size( -1 -1 0, 1 1 1 ) studio("models/editor/axis_helper_thick.mdl") instance() = func_instance : 
	"An entity for placing an instance of a map file.  You may translate and rotate this entity. " +
	"You can use the replace keys to do parameter changes on the instance contents.  In a $ at the " +
	"beginning of a variable name.  Then just use the $variable name inside of the instance contents on any "+
	"value portion of a key/value pair."
[
	targetname(target_source) : "Fix Up Name" : : "The name that all entities will be fixed up with based upon the fix up style."
	spawnpositionname(string) : "Spawn Position Name" : : "The name of the spawn position created when an instance is exported to the entity layer."
	file(instance_file) : "VMF Filename" : : "This indicates a map file relative to the map's file name. \n If the instance.vmf and your map.vmf are neither in the same folder, nor in a subfolder of eachother, (Like maps/instances/instance.vmf and maps/project/map.vmf) you can use ../ to 'pop' a folder out, in order to enter a new one. As such: '../Instances/instance.vmf'"
	fixup_style(Choices) : "Entity Name Fix Up" : 0 : "Fixup style for instanced entity names.  Uses the 'Fix Up Name' field." =
	[
		0 : "Prefix"
		1 : "Postfix"
		2 : "None"
	]
	propagate_fixup(Choices) : "Fixup Nested Instances" : 0 : "All nested instances will follow this instance's fixup rules. Any fixup rules in nested instances will be ignored." =
	[
		0 : "No"
		1 : "Yes"
	]

	replace01(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace02(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace03(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace04(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace05(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace06(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace07(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace08(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace09(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
	replace10(instance_variable) : "Replace" : : "This is a replacement parameter.  It goes in the form of $variable value.  All entities inside of that instance that have $variable somewhere will be replaced with the value contents.  Example: $color 255 0 0"
]
@PointClass iconsprite("editor/func_instance_parms.vmt") = func_instance_parms : 
	"Place one copy of this entity inside of an instance.  Whenever you add a $parameter for the instance, get the properties " +
	"of this entity.  It will auto-populate it with the variables and allow you to indicate the variable type."
[
	parm1(instance_parm) 	: "Parm" : : "This is a parameter.  It goes in the form of $variable type [default value]."
	parm2(instance_parm) 	: "Parm" : : "This is a parameter.  It goes in the form of $variable type [default value]."
	parm3(instance_parm) 	: "Parm" : : "This is a parameter.  It goes in the form of $variable type [default value]."
	parm4(instance_parm) 	: "Parm" : : "This is a parameter.  It goes in the form of $variable type [default value]."
	parm5(instance_parm) 	: "Parm" : : "This is a parameter.  It goes in the form of $variable type [default value]."
	parm6(instance_parm) 	: "Parm" : : "This is a parameter.  It goes in the form of $variable type [default value]."
	parm7(instance_parm) 	: "Parm" : : "This is a parameter.  It goes in the form of $variable type [default value]."
	parm8(instance_parm) 	: "Parm" : : "This is a parameter.  It goes in the form of $variable type [default value]."
	parm9(instance_parm) 	: "Parm" : : "This is a parameter.  It goes in the form of $variable type [default value]."
	parm10(instance_parm) 	: "Parm" : : "This is a parameter.  It goes in the form of $variable type [default value]."
]