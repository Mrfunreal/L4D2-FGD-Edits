@BaseClass base(Targetname, Parentname, Origin, EnableDisable, Global) = TriggerOnce
[
	spawnflags(flags) = 
	[
		1: 		"Survivors, Special Infected, Tanks (Clients)"														: 1
		2: 		"Common Infected, Witches           (NPCs)"															: 0
		64: 	"Everything - Use filters to get specific models/classes to trigger. Works for Throwables that way"	: 0
		4: 		"OBSOLETE - Pushables (technically works, but the pushable entity doesn't exist in the fgd)"		: 0
		8: 		"OBSOLETE - Physics Objects" 																		: 0
		1024: 	"OBSOLETE - Physics Debris" 																		: 0
		16: 	"OBSOLETE - Only player ally NPCs" 																	: 0
		512: 	"OBSOLETE - Only clients *not* in vehicles" 														: 0
		32: 	"OBSOLETE - Only clients in vehicles" 																: 0
		2048:	"OBSOLETE - Only NPCs in vehicles (respects player ally flag)" 										: 0
	]

	filtername(filterclass) : "Filter Name" : : "Filter to use to see if activator triggers me. See filter_activator_name for more explanation."

	// Inputs
	input Toggle(void) : "Toggles this trigger between enabled and disabled states."

	// Outputs
	output OnStartTouch(void) : "Fired when an entity starts touching this trigger. The touching entity must pass this trigger's filters to cause this output to fire."
]


@SolidClass base(Trigger) color(255 163 38)= trigger_auto_crouch : "Allows players touching the trigger to auto-crouch ONLY IF an obscatcle you can crouch under is also in its volume"
[
	note1(string) : "Click me to read how I work!" : : "When this entity covers the entrance of a small space, such as an airduct, the players will automatically crouch when walking into the crawlspace. It will NOT force crouching at all times. If you want to force crouching, use trigger_playermovement using the 'Auto-duck while in trigger' and the 'Disable auto player movement' flags."
]
		
//trigger_finale uses hamradio
@PointClass base(Targetname, Angles, EnableDisable) studioprop() = trigger_finale : "Finale Trigger"
[
	model(studio) : "World model" : "models\props\terror\hamradio.mdl"

	disableshadows(choices) : "Disable Shadows" : 0 : "Used to disable dynamic shadows on this entity." =
	[
		0 : "No"
		1 : "Yes"
	]

	FirstUseDelay(float) : "First Use Delay" : "0" : "For two-part finale starts, delays this many seconds before allowing another +use."
	UseDelay(float) : "Use Delay" : "0" : "Starts the finale this many seconds after a +use."

	type(choices) : "Finale Type" : 0 : "Specifies which style of finale to trigger" =
	[
		0 : "Standard"
		1 : "Gauntlet"
		2 : "Custom"
		4 : "Scavenge"
	]

	ScriptFile(string) : "Script File"
	
	VersusTravelCompletion(float) : "Versus Travel" : "0.2" : "How much of the versus score is attained through travel to the finale ( not valid in gauntlet finale )"

	
	IsSacrificeFinale(choices) : "Is Sacrifice Finale" : 0 : "If true, one survivor has to be available to perform some action outside the escape vehicle." =
	[
		0 : "No"
		1 : "Yes"
	]
	
	
	input FinaleEscapeFinished(void) : "Give the survivors a victory."
	input FinaleEscapeForceSurvivorPositions(void) : "Make the survivors stand still on the escape vehicle."
	input FinaleEscapeVehicleReadyForSurvivors(void) : "Make survivors say something about how the vehicle has stopped now."
	input ForceFinaleStart(void) : "Start the finale now."
	input GauntletStopPanic(void) : "Move the gauntlet finale state out of continuous panic mode"
	input AdvanceFinaleState(void) : "Increments the finale state"
	input SacrificeEscapeFailed(void) : "Indicates the survivors failed the escape requirements"
	input SacrificeEscapeSucceeded(void) : "Indicates the surviors met the escape requirements"
	input SacrificePlayerBeginsRun(void) : "A player ( !Activator ) has committed to the sacrifice run"
	output FinaleEscapeStarted(void) : "Fired when the survivors should start their escape."
	output FinaleWon(void) : "Fired when the survivors win the finale."
	output FinaleLost(void) : "Fired when the survivors lose the finale."
	output FirstUseStart(void) : "Fired when a player uses the trigger the first time."
	output UseStart(void) : "Fired when a player uses the trigger to start the finale."
	output FinaleStart(void) : "Fired when the finale starts."
	output FinalePause(void) : "Fired during the pause between each finale wave."
	output EscapeVehicleLeaving(void) : "Fired when the escape vehicle starts to leave."
]
		